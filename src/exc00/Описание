                    Необробатываемые исключения.

Пример Excep0:

    В примене небольшой программы намеренно введен оператор, вызывающий
ошибку деления на нуль.
    Когда исполняющая система Jаvа обнаруживает попытку деления на нуль,
она создает новый объект исключения, а затем генерирует исключение. Это
прерывает выполнение класса ЕхсО, ведь как только исключение сгенерировано,
оно должно быть перехвачено обработчиком исключений и немедленно обработано.
В данном примере обработчик исключений отсутствует, и поэтому исключение
перехватывается стандартным обработчиком, предоставляемым исполняющей систе-
мой Java.Стандартный обработчик выводит символьную строку с описанием исклю-
чения и результат трассировки стека, начиная с момента возникновения исключе-
ния, а затем прерывает выполнение программы.

Exception in thread "main" java.lang.ArithmeticException: / by zero
	at exc00.Excep0.main(Excep0.java:6)

	Трассировка стека позволяет проследить последовательность вызовов методов,
которые привели к ошибке.
_________________________________________________________________________________

Пример Excep1:

    В другой версии программы вносится таже самая ошибка, но уже не в методе
main(), а в другом методе.
    Результат трассировки стека стандартного обработчика исключений отображает
весь стек вызовов следующим образом:

Exception in thread "main" java.lang.ArithmeticException: / by zero
	at exc00.Excep1.subroutine(Excep1.java:6)
	at exc00.Excep1.main(Excep1.java:10)

	Как видите, на дне стека находится десятая строка кода из метода main() , в
которой делается вызов метода subroutine(), вызвавший исключение при вы­полнении
шестой строки кода.
